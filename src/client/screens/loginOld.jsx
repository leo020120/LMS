import { createClient } from "@supabase/supabase-js";
import { Auth } from "@supabase/auth-ui-react";
import { useNavigate } from "react-router-dom";
import { ThemeSupa } from "@supabase/auth-ui-shared";
import "../components/styles/login.css";
import supabase from "../../supabase";

function Login() {
  const navigate = useNavigate();

  const handleCustomSignup = async (email, password, username) => {
    try {
      // Sign up the user with Supabase Auth
      const { user, error } = await supabase.auth.signUp({
        email,
        password,
      });

      if (error) {
        console.error("Error during signup:", error);
        // Handle the error, e.g., display an error message to the user
      } else {
        // User signed up successfully
        // Create a user profile in your custom "Users" table
        const userId = user.id; // Use the UUID generated by Supabase
        await createCustomProfile(userId, email, username);

        // Navigate to a success page
        navigate("/success");
      }
    } catch (error) {
      console.error("Error during signup:", error);
      // Handle the error, e.g., display an error message to the user
    }
  };

  const createCustomProfile = async (userId, email, username) => {
    try {
      // Use Supabase.js to insert a record into your custom "Users" table
      const { data, error } = await supabase.from("USERS").upsert(
        [
          {
            id: userId,
            email,
            username,
          },
        ],
        { onConflict: ["id"] }
      );

      if (error) {
        console.error("Error creating custom profile:", error);
        // Handle the error, e.g., log it or display an error message to the user
      } else {
        console.log("Custom profile created successfully:", data);
        // Optionally, perform any additional actions on success
      }
    } catch (error) {
      console.error("Error creating custom profile:", error);
      // Handle the error, e.g., log it or display an error message to the user
    }
  };

  return (
    <div className="login">
      <header className="loginHeader">
        <Auth
          supabaseClient={supabase}
          appearance={{ theme: ThemeSupa }}
          theme="dark"
          providers={["discord", "google", "facebook"]}
          customProviders={[
            {
              id: "custom",
              name: "Custom Signup",
              type: "basic",
              form: CustomSignupForm,
            },
          ]}
        />
      </header>
    </div>
  );
}

const CustomSignupForm = ({ onAuthStateChange }) => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [username, setUsername] = useState("");

  const handleSubmit = async () => {
    await handleCustomSignup(email, password, username);
    onAuthStateChange("signed_in");
  };

  return (
    <div>
      <h3>Custom Signup</h3>
      <input
        type="text"
        placeholder="Email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
      />
      <input
        type="password"
        placeholder="Password"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
      />
      <input
        type="text"
        placeholder="Username"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
      />
      <button onClick={handleSubmit}>Sign Up</button>
    </div>
  );
};

export default Login;
